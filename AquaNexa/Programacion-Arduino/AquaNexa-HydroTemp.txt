// definicion de pines
#define DHTPIN 2
#define RELAYPIN 7
#define RELAYPIN1 6
const int sensorPinT = A1;

// definicion del sensor
#define DHTTYPE DHT11

// creacion de variables
int humedadParaActivado = 25; 
int tiempoParaMedicion = 32400000;
int tiempoRegado = 240000; 



int casoActual = 2; // inicia en caso 3


struct HumedadConfig {
  int humedadParaActivado;
  int tiempoRegado;
  int tiempoParaMedicion;
};


// Definición de los casos
HumedadConfig casos[5] = {
  {5, 120000, 129600000},   // caso 1: Humedad muy baja
  {15, 240000, 50400000},  // caso 2: Humedad baja
  {25, 240000, 32400000}, // caso 3: Humedad media
  {35, 420000, 28800000}, // caso 4: Humedad alta
  {40, 420000, 18000000}  // caso 5: Humedad muy alta
};



void setup() {
  pinMode(RELAYPIN, OUTPUT); 
  Serial.begin(9600); 
}

void loop() {
  int sensorValue = analogRead(DHTPIN); // leer humedad
  int humedad = sensorValue/8.76; //calcular porcentaje
  int sensorValueT = analogRead(sensorPinT); // Leer el valor del sensor (0 a 1023)
  float voltageT = sensorValueT * (5.0 / 1023.0); // Convertir a voltaje (asumiendo 5V de referencia)
  float temperatureC = (voltageT - 0.5) * 100.0; // Convertir a grados Celsius  


   //mencion de humedad
  Serial.print("Humedad: ");
  Serial.print(humedad);
  Serial.println("%");
  
   //mencion de humedad
  Serial.print("Humedad: ");
  Serial.print(humedad);
  Serial.println("%");
  
  
   // actualizacion de las variables según el caso actual
  humedadParaActivado = casos[casoActual].humedadParaActivado;
  tiempoRegado = casos[casoActual].tiempoRegado;
  tiempoParaMedicion = casos[casoActual].tiempoParaMedicion;

  // activacion del regado e intervalo para apagarse y volver a medir
  if (humedad < humedadParaActivado) {
    digitalWrite(RELAYPIN, HIGH);
    digitalWrite(RELAYPIN1, HIGH);
    Serial.println("Relé activado");
    delay (tiempoRegado);
    digitalWrite(RELAYPIN, LOW);
    digitalWrite(RELAYPIN1, LOW);
    
  } 

  delay(tiempoParaMedicion);

}
	//funcion de cambio de clase
void cambiarCaso(int nuevoCaso) {
  if (nuevoCaso >= 0 && nuevoCaso < 5) {
    casoActual = nuevoCaso;
    Serial.print("Caso cambiado a: ");
    Serial.println(casoActual);
  } else {
    Serial.println("Caso inválido");
  }
}